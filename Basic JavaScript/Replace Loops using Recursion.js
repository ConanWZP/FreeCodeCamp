function sum(arr, n) {
    // Only change code below this line

    if (n <= 0) {
        console.log('Выполнилось')
        return 0
    } else {

        console.log( n, 'значение n' )
        let a = sum(arr, n-1) + arr[n-1]
        console.log(a, 'a')
        return a

    }

    // Only change code above this line
}


/*

Приницип работы таков:

сначала запускается sum([2, 4, 6, 15], 3), он идёт в else там сталкивается с тем,
    чтобы вычислить 'переменную a' ему нужно знать sum([2, 4, 6, 15], 2), но этого он не знает
и запускает уже функцию sum([2, 4, 6, 15], 2), также идёт в else где сталкивается с тем, что для вычисления переменной 'a'
он должен знать значение  sum([2, 4, 6, 15], 1), т.к. не знает код
запускает sum([2, 4, 6, 15], 1), где также идёт в else и сталкивается, что нужно вычислить sum([2, 4, 6, 15], 0) и
запускается sum([2, 4, 6, 15], 0), которая идёт по ветке if(n<=0) и возвращает значение ноль,
после этого начинается решение случая sum([2, 4, 6, 15], 1), после которого возможно решение sum([2, 4, 6, 15], 2), которое
даёт возможность решения sum([2, 4, 6, 15], 3) и в итоге полностью функция завершает работу

Т.е. в итоге можно сказать что функция работает задом на перёд, начиная с n=0 и заканчивая n=3



*/

console.log(  sum([2, 4, 6, 15], 3)  )